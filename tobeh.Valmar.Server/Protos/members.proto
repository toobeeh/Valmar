syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "tobeh.Valmar";
package members;

enum MemberFlagMessage {
  Admin = 0;
  Moderator = 1;
  Patron = 2;
  Patronizer = 3;
  Booster = 4;
  DropBan = 5;
  PermaBan = 6;
  Beta = 7;
  BubbleFarming = 8;
  UnlimitedCloud = 9;
  ContentModerator = 10;
}

// Service definition for member resource access
service Members {
  
  rpc CreateNewMember (CreateNewMemberRequest) returns (MemberReply);
  
  // Gets a member by its login
  rpc GetMemberByLogin (IdentifyMemberByLoginRequest) returns (MemberReply);
  
  // Gets many members by login
  rpc GetMembersByLogin (GetMembersByLoginMessage) returns (stream MemberReply);
  
  // Gets a member by its access token
  rpc GetMemberByAccessToken (IdentifyMemberByAccessTokenRequest) returns (MemberReply);

  // Gets a member by its connected discord account id
  rpc GetMemberByDiscordId (IdentifyMemberByDiscordIdRequest) returns (MemberReply);

  // Gets the patronized member of a given member (id)
  rpc GetPatronizedOfMember (IdentifyMemberByDiscordIdRequest) returns (MemberReply);

  // Finds members matching a query
  rpc SearchMember (SearchMemberRequest) returns (stream MemberSearchReply);
  
  // Gets the raw member json string of a member
  rpc GetRawMemberByLogin (IdentifyMemberByLoginRequest) returns (RawMemberReply);

  // Gets the accesstoken of a member
  rpc GetAccessTokenByLogin (IdentifyMemberByLoginRequest) returns (AccessTokenReply);
  
  // Updates the linked discord id of a member
  rpc UpdateMemberDiscordId (UpdateDiscordIdRequest) returns (MemberReply);

  // Clears the last or current dropboost of a member
  rpc ClearMemberDropboost (IdentifyMemberByLoginRequest) returns (google.protobuf.Empty);

  // Adds a server to the member's connections
  rpc AddMemberServerConnection (ModifyServerConnectionRequest) returns (google.protobuf.Empty);

  // Removes a server from the member's connections
  rpc RemoveMemberServerConnection (ModifyServerConnectionRequest) returns (google.protobuf.Empty);
}

// Response containing a member's properties.
message MemberReply {
  int32 bubbles = 1;
  double drops = 2;
  string sprites = 3;
  string scenes = 4;
  int32 flags = 5;
  string rainbowSprites = 6;
  int64 discordId = 7;
  string username = 8;
  int32 login = 9;
  repeated int32 serverConnections = 10;
  repeated MemberFlagMessage mappedFlags = 11;
  google.protobuf.Timestamp nextAwardPackDate = 12;
  google.protobuf.StringValue patronEmoji = 13;
  google.protobuf.Timestamp nextPatronizeDate = 14;
  google.protobuf.Timestamp nextHomeChooseDate = 15;
}

// Reply containing the accesstoken of a member
message AccessTokenReply {
  string accessToken = 1;
}

// Response containing a member as raw json with all possible information for inspection, in no  particular structure
message RawMemberReply {
  string memberJson = 1;
}

// Response containing a brief member data as well as inspection data
message MemberSearchReply {
  string username = 1;
  int32 login = 2;
  RawMemberReply raw = 3;
}

// Request used to target a distinct member by id
message IdentifyMemberByLoginRequest {
  int32 login = 1;
}

message GetMembersByLoginMessage {
  repeated int32 logins = 1;
}

// Request used to target a distinct member by id
message IdentifyMemberByAccessTokenRequest {
  string accessToken = 1;
}

// Request used to target a distinct member by id
message IdentifyMemberByDiscordIdRequest {
  int64 id = 1;
}

// Request to fetch members matching a plain text query
message SearchMemberRequest {
  string query = 1;
}

// Request to modify a server conenction of a member
message ModifyServerConnectionRequest {
  int32 login = 1;
  int32 serverToken = 2;
}

// Request to update the linked discord id of a member
message UpdateDiscordIdRequest {
  int32 login = 1;
  int64 discordId = 2;
}

// Request containing member data to use as base for a new palantir member
message CreateNewMemberRequest {
  int64 discordId = 1;
  string username = 2;
  bool connectToTypoServer = 3;
}



