syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option csharp_namespace = "tobeh.Valmar";
package scenes;

// Service definition for scene resource access
service Scenes {
  
  // Gets all scenes
  rpc GetAllScenes (google.protobuf.Empty) returns (stream SceneReply);

  // Gets all scene themes
  rpc GetAllSceneThemes (google.protobuf.Empty) returns (stream SceneThemeReply);

  // Gets all themes of a scene
  rpc GetThemesOfScene (GetSceneRequest) returns (stream SceneThemeReply);

  // Gets a scene by its id
  rpc GetSceneById (GetSceneRequest) returns (SceneReply);

  // Gets the ranking of all scenes
  rpc GetSceneRanking (google.protobuf.Empty) returns (stream SceneRankingReply);
  
  // Gets the price and scene of an event
  rpc GetEventScene (GetEventSceneRequest) returns (EventSceneReply);
}

// Response containing a scene's properties.
message SceneReply {
  string name = 1;
  string url = 2;
  int32 id = 3;
  bool exclusive = 4;
  google.protobuf.StringValue primaryColor = 5;
  google.protobuf.StringValue guessedColor = 6;
  google.protobuf.StringValue artist = 7;
  google.protobuf.Int32Value eventId = 8;
}

// Response containing a scene theme's properties.
message SceneThemeReply {
  string name = 1;
  int32 sceneId = 2;
  int32 shift = 3;
}

// Request containing a scene id
message GetSceneRequest {
  int32 id = 1;
}

// Response containing the ranking of a scene
message SceneRankingReply {
  int32 id = 1;
  int32 activeUsers = 2;
  int32 totalBought = 3;
  int32 rank = 4;
}

message EventSceneReply {
  SceneReply scene = 1;
  int32 price = 2;
}

message GetEventSceneRequest {
  int32 eventId = 1;
}
