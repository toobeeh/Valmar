syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "tobeh.Valmar";
package admin;

enum OnlineItemType {
  Sprite = 0;
  ColorShift = 1;
  Scene = 2;
  Award = 3;
  Rewardee = 5;
}

// Service definition for administration and management actions
service Admin {
  
  // Reevaluates the last chunk of the drop cache
  rpc ReevaluateDropChunks (google.protobuf.Empty) returns (google.protobuf.Empty);
  
  // Update the flags of members
  rpc UpdateMemberFlags (UpdateMemberFlagsRequest) returns (google.protobuf.Empty);
  
  // Fetch current member bubble count and save as bubble traces
  rpc CreateBubbleTraces (google.protobuf.Empty) returns (google.protobuf.Empty);

  // Clear volatile data from tables, like sprites, lobbies and online status
  rpc ClearVolatileData (google.protobuf.Empty) returns (google.protobuf.Empty);

  // Increments the bubble count of a range of members
  rpc IncrementMemberBubbles (IncrementMemberBubblesRequest) returns (google.protobuf.Empty);
  
  // Writes a set of new onlineitems to the database
  rpc SetOnlineItems (SetOnlineItemsRequest) returns (google.protobuf.Empty);
}

// Request to update the flags of members
message UpdateMemberFlagsRequest {
  repeated int64 memberIds = 1;
  bool invertOthers = 2;
  bool state =  3;
  int32 flagId = 4;
}

message SetOnlineItemsRequest {
  repeated OnlineItemMessage items = 1;
}

message OnlineItemMessage {
  OnlineItemType itemType = 1;
  int32 slot = 2;
  int32 itemId = 3;
  string lobbyKey = 4;
  int32 lobbyPlayerId = 5;
}

// Request to increment the bubble count of a range of members
message IncrementMemberBubblesRequest {
  repeated int32 memberLogins = 1;
}
